5_java homerwork - Alon Yaari

1.
Here are some differences between the stack and the heap:
First, The Heap Space contains all objects are created, but Stack contains any reference to those objects.
Another difference is that heap space is used throughout the application, but stack is only used for the method currently running.
The third differnce is that you have access to the hip throughout the application. While in order to reach to the variables in stack you should thier methods.

2. 
We can split the jvm to 3 different components:
	1. The JRE is the runtime data area. It responsible on memory that the JVM needs in order to execute.
	2. JVM exection engine - The actoal engine that converts the bytecode into machine code. After thet, the engine executes the orders. The angine has an inturpeter as well as garbage collector.
	3. The third component is the class loader - which is (conspicuously) responsible for loading the classes.  The class loder load every class, including the files we import.
	   After thet, it checks the there are no any errors ta the code, and allocates memory for both the varibles in the code.

3.
In my opinion, the main reason we use JVM is that this tool allows as to operate java code on every OS, because it builds a unique enviroment where the byteCode run.
Another reason to use JVM is that it allows as to write highly secure programs using built-in security features. It keeps Java programs from interacting with OS resources directly.

4.
Byte Code is an intermediate code generated by the compiler after the compilation of source code (the JAVA program).

5. 

6.
The JIT compiles bytcode to machine code at run time. 
The JIt helps imprive the performance of a java program because its  compile at run time the methods, instead of compiling the methods once again.
